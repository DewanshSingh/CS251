        -:    0:Source:tcas.c
        -:    0:Graph:tcas.gcno
        -:    0:Data:tcas.gcda
        -:    0:Runs:201
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:
        -:    3:#define OLEV       600		/* in feets/minute */
        -:    4:#define MAXALTDIFF 600		/* max altitude difference in feet */
        -:    5:#define MINSEP     300          /* min separation in feet */
        -:    6:#define NOZCROSS   100		/* in feet */
        -:    7:				/* variables */
        -:    8:
        -:    9:typedef int bool;
        -:   10:
        -:   11:int Cur_Vertical_Sep;
        -:   12:bool High_Confidence;
        -:   13:bool Two_of_Three_Reports_Valid;
        -:   14:
        -:   15:int Own_Tracked_Alt;
        -:   16:int Own_Tracked_Alt_Rate;
        -:   17:int Other_Tracked_Alt;
        -:   18:
        -:   19:int Alt_Layer_Value;		/* 0, 1, 2, 3 */
        -:   20:int Positive_RA_Alt_Thresh[4];
        -:   21:
        -:   22:int Up_Separation;
        -:   23:int Down_Separation;
        -:   24:
        -:   25:				/* state variables */
        -:   26:int Other_RAC;			/* NO_INTENT, DO_NOT_CLIMB, DO_NOT_DESCEND */
        -:   27:#define NO_INTENT 0
        -:   28:#define DO_NOT_CLIMB 1
        -:   29:#define DO_NOT_DESCEND 2
        -:   30:
        -:   31:int Other_Capability;		/* TCAS_TA, OTHER */
        -:   32:#define TCAS_TA 1
        -:   33:#define OTHER 2
        -:   34:
        -:   35:int Climb_Inhibit;		/* true/false */
        -:   36:
        -:   37:#define UNRESOLVED 0
        -:   38:#define UPWARD_RA 1
        -:   39:#define DOWNWARD_RA 2
        -:   40:
      199:   41:void initialize()
        -:   42:{
      199:   43:    Positive_RA_Alt_Thresh[0] = 400;
      199:   44:    Positive_RA_Alt_Thresh[1] = 500;
      199:   45:    Positive_RA_Alt_Thresh[2] = 640;
      199:   46:    Positive_RA_Alt_Thresh[3] = 740;
      199:   47:}
        -:   48:
      132:   49:int ALIM ()
        -:   50:{
      132:   51: return Positive_RA_Alt_Thresh[Alt_Layer_Value];
        -:   52:}
        -:   53:
      214:   54:int Inhibit_Biased_Climb ()
        -:   55:{
      214:   56:    return (Climb_Inhibit ? Up_Separation + NOZCROSS : Up_Separation);
        -:   57:}
        -:   58:
      107:   59:bool Non_Crossing_Biased_Climb()
        -:   60:{
        -:   61:    int upward_preferred;
        -:   62:    int upward_crossing_situation;
        -:   63:    bool result;
        -:   64:
      107:   65:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
      107:   66:    if (upward_preferred)
        -:   67:    {
       61:   68:	result = !(Own_Below_Threat()) || ((Own_Below_Threat()) && (!(Down_Separation >= ALIM())));
        -:   69:    }
        -:   70:    else
        -:   71:    {	
       46:   72:	result = Own_Above_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Up_Separation >= ALIM());
        -:   73:    }
      107:   74:    return result;
        -:   75:}
        -:   76:
      107:   77:bool Non_Crossing_Biased_Descend()
        -:   78:{
        -:   79:    int upward_preferred;
        -:   80:    int upward_crossing_situation;
        -:   81:    bool result;
        -:   82:
      107:   83:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
      107:   84:    if (upward_preferred)
        -:   85:    {
       61:   86:	result = Own_Below_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Down_Separation >= ALIM());
        -:   87:    }
        -:   88:    else
        -:   89:    {
       46:   90:	result = !(Own_Above_Threat()) || ((Own_Above_Threat()) && (Up_Separation >= ALIM()));
        -:   91:    }
      107:   92:    return result;
        -:   93:}
        -:   94:
      213:   95:bool Own_Below_Threat()
        -:   96:{
      213:   97:    return (Own_Tracked_Alt < Other_Tracked_Alt);
        -:   98:}
        -:   99:
      180:  100:bool Own_Above_Threat()
        -:  101:{
      180:  102:    return (Other_Tracked_Alt < Own_Tracked_Alt);
        -:  103:}
        -:  104:
      199:  105:int alt_sep_test()
        -:  106:{
        -:  107:    bool enabled, tcas_equipped, intent_not_known;
        -:  108:    bool need_upward_RA, need_downward_RA;
        -:  109:    int alt_sep;
        -:  110:
      199:  111:    enabled = High_Confidence && (Own_Tracked_Alt_Rate <= OLEV) && (Cur_Vertical_Sep > MAXALTDIFF);
      199:  112:    tcas_equipped = Other_Capability == TCAS_TA;
      199:  113:    intent_not_known = Two_of_Three_Reports_Valid && Other_RAC == NO_INTENT;
        -:  114:    
      199:  115:    alt_sep = UNRESOLVED;
        -:  116:    
      199:  117:    if (enabled && ((tcas_equipped && intent_not_known) || !tcas_equipped))
        -:  118:    {
      107:  119:	need_upward_RA = Non_Crossing_Biased_Climb() && Own_Below_Threat();
      107:  120:	need_downward_RA = Non_Crossing_Biased_Descend() && Own_Above_Threat();
      107:  121:	if (need_upward_RA && need_downward_RA)
        -:  122:        /* unreachable: requires Own_Below_Threat and Own_Above_Threat
        -:  123:           to both be true - that requires Own_Tracked_Alt < Other_Tracked_Alt
        -:  124:           and Other_Tracked_Alt < Own_Tracked_Alt, which isn't possible */
    #####:  125:	    alt_sep = UNRESOLVED;
      107:  126:	else if (need_upward_RA)
       14:  127:	    alt_sep = UPWARD_RA;
       93:  128:	else if (need_downward_RA)
       16:  129:	    alt_sep = DOWNWARD_RA;
        -:  130:	else
       77:  131:	    alt_sep = UNRESOLVED;
        -:  132:    }
        -:  133:    
      199:  134:    return alt_sep;
        -:  135:}
        -:  136:
      201:  137:main(argc, argv)
        -:  138:int argc;
        -:  139:char *argv[];
        -:  140:{
      201:  141:    if(argc < 13)
        -:  142:    {
        2:  143:	fprintf(stdout, "Error: Command line arguments are\n");
        2:  144:	fprintf(stdout, "Cur_Vertical_Sep, High_Confidence, Two_of_Three_Reports_Valid\n");
        2:  145:	fprintf(stdout, "Own_Tracked_Alt, Own_Tracked_Alt_Rate, Other_Tracked_Alt\n");
        2:  146:	fprintf(stdout, "Alt_Layer_Value, Up_Separation, Down_Separation\n");
        2:  147:	fprintf(stdout, "Other_RAC, Other_Capability, Climb_Inhibit\n");
        2:  148:	exit(1);
        -:  149:    }
      199:  150:    initialize();
      199:  151:    Cur_Vertical_Sep = atoi(argv[1]);
      199:  152:    High_Confidence = atoi(argv[2]);
      199:  153:    Two_of_Three_Reports_Valid = atoi(argv[3]);
      199:  154:    Own_Tracked_Alt = atoi(argv[4]);
      199:  155:    Own_Tracked_Alt_Rate = atoi(argv[5]);
      199:  156:    Other_Tracked_Alt = atoi(argv[6]);
      199:  157:    Alt_Layer_Value = atoi(argv[7]);
      199:  158:    Up_Separation = atoi(argv[8]);
      199:  159:    Down_Separation = atoi(argv[9]);
      199:  160:    Other_RAC = atoi(argv[10]);
      199:  161:    Other_Capability = atoi(argv[11]);
      199:  162:    Climb_Inhibit = atoi(argv[12]);
        -:  163:
      199:  164:    fprintf(stdout, "%d\n", alt_sep_test());
      199:  165:    exit(0);
        -:  166:}
        -:  167:
